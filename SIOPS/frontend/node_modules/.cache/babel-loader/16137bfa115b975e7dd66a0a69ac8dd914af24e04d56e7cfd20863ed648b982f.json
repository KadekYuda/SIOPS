{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\routes\\\\AppRoutes.jsx\";\nimport { createBrowserRouter, Navigate } from \"react-router-dom\";\nimport Login from \"../components/Page/Home/Login\";\nimport OrderStock from \"../components/Page/Order/OrderStock\";\nimport DashboardAdmin from \"../components/Page/Sidebar/admin/DashboardAdmin\";\nimport DashboardStaff from \"../components/Page/Sidebar/staff/DashboardStaff\";\nimport DashboardLayout from \"../components/Page/Home/DashboardLayout\";\nimport UserProfile from \"../components/Page/Profile/UserProfile\";\nimport Product from \"../components/Page/Product/Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppRoutes() {\n  // Function to check if user is authenticated\n  const isAuthenticated = () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return false;\n    try {\n      const userData = JSON.parse(atob(token.split(\".\")[1]));\n      const currentTime = Math.floor(Date.now() / 1000);\n      return userData.exp > currentTime;\n    } catch {\n      return false;\n    }\n  };\n\n  // Function to get user role\n  const getUserRole = () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return null;\n    try {\n      const userData = JSON.parse(atob(token.split(\".\")[1]));\n      return userData.role || null;\n    } catch {\n      return null;\n    }\n  };\n\n  // Protected Route component\n  const ProtectedRoute = ({\n    children,\n    allowedRoles = []\n  }) => {\n    const auth = isAuthenticated();\n    const role = getUserRole();\n    if (!auth) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    }\n    if (allowedRoles.length > 0 && !allowedRoles.includes(role)) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: role === \"admin\" ? \"/dashboardAdmin\" : \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n\n  // Public Route component (accessible only when not authenticated)\n  const PublicRoute = ({\n    children\n  }) => {\n    const auth = isAuthenticated();\n    const role = getUserRole();\n    if (auth) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: role === \"admin\" ? \"/dashboardAdmin\" : \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n\n  // Define routes\n  const routes = [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      children: /*#__PURE__*/_jsxDEV(DashboardLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        children: getUserRole() === \"admin\" ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboardAdmin\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"dashboardAdmin\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: [\"admin\"],\n        children: /*#__PURE__*/_jsxDEV(DashboardAdmin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"dashboard\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: [\"staff\"],\n        children: /*#__PURE__*/_jsxDEV(DashboardStaff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"product\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: [\"staff\", \"admin\"],\n        children: /*#__PURE__*/_jsxDEV(Product, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"userprofile\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: [\"staff\", \"admin\"],\n        children: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"order\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(OrderStock, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: getUserRole() === \"admin\" ? \"/dashboardAdmin\" : \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }]\n  }, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }];\n\n  // Create the router with future flags\n  const router = createBrowserRouter(routes, {\n    future: {\n      v7_startTransition: true,\n      // Opt into React.startTransition behavior\n      v7_relativeSplatPath: true // Opt into new relative route resolution for splat routes\n    }\n  });\n  return router;\n}\n_c = AppRoutes;\nexport default AppRoutes;\nvar _c;\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"names":["createBrowserRouter","Navigate","Login","OrderStock","DashboardAdmin","DashboardStaff","DashboardLayout","UserProfile","Product","jsxDEV","_jsxDEV","AppRoutes","isAuthenticated","token","localStorage","getItem","userData","JSON","parse","atob","split","currentTime","Math","floor","Date","now","exp","getUserRole","role","ProtectedRoute","children","allowedRoles","auth","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","PublicRoute","routes","path","element","index","router","future","v7_startTransition","v7_relativeSplatPath","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/routes/AppRoutes.jsx"],"sourcesContent":["import { createBrowserRouter, Navigate } from \"react-router-dom\";\r\n\r\nimport Login from \"../components/Page/Home/Login\";\r\nimport OrderStock from \"../components/Page/Order/OrderStock\";\r\nimport DashboardAdmin from \"../components/Page/Sidebar/admin/DashboardAdmin\";\r\nimport DashboardStaff from \"../components/Page/Sidebar/staff/DashboardStaff\";\r\nimport DashboardLayout from \"../components/Page/Home/DashboardLayout\";\r\nimport UserProfile from \"../components/Page/Profile/UserProfile\";\r\nimport Product from \"../components/Page/Product/Product\";\r\n\r\nfunction AppRoutes() {\r\n  // Function to check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return false;\r\n\r\n    try {\r\n      const userData = JSON.parse(atob(token.split(\".\")[1]));\r\n      const currentTime = Math.floor(Date.now() / 1000);\r\n      return userData.exp > currentTime;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Function to get user role\r\n  const getUserRole = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const userData = JSON.parse(atob(token.split(\".\")[1]));\r\n      return userData.role || null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Protected Route component\r\n  const ProtectedRoute = ({ children, allowedRoles = [] }) => {\r\n    const auth = isAuthenticated();\r\n    const role = getUserRole();\r\n    if (!auth) {\r\n      return <Navigate to=\"/login\" replace />;\r\n    }\r\n    if (allowedRoles.length > 0 && !allowedRoles.includes(role)) {\r\n      return <Navigate to={role === \"admin\" ? \"/dashboardAdmin\" : \"/dashboard\"} replace />;\r\n    }\r\n    return children;\r\n  };\r\n\r\n  // Public Route component (accessible only when not authenticated)\r\n  const PublicRoute = ({ children }) => {\r\n    const auth = isAuthenticated();\r\n    const role = getUserRole();\r\n    if (auth) {\r\n      return <Navigate to={role === \"admin\" ? \"/dashboardAdmin\" : \"/dashboard\"} replace />;\r\n    }\r\n    return children;\r\n  };\r\n\r\n  // Define routes\r\n  const routes = [\r\n    {\r\n      path: \"/\",\r\n      element: (\r\n        <ProtectedRoute>\r\n          <DashboardLayout />\r\n        </ProtectedRoute>\r\n      ),\r\n      children: [\r\n        {\r\n          index: true,\r\n          element: (\r\n            <ProtectedRoute>\r\n              {getUserRole() === \"admin\" ? (\r\n                <Navigate to=\"/dashboardAdmin\" replace />\r\n              ) : (\r\n                <Navigate to=\"/dashboard\" replace />\r\n              )}\r\n            </ProtectedRoute>\r\n          ),\r\n        },\r\n        {\r\n          path: \"dashboardAdmin\",\r\n          element: (\r\n            <ProtectedRoute allowedRoles={[\"admin\"]}>\r\n              <DashboardAdmin />\r\n            </ProtectedRoute>\r\n          ),\r\n        },\r\n        {\r\n          path: \"dashboard\",\r\n          element: (\r\n            <ProtectedRoute allowedRoles={[\"staff\"]}>\r\n              <DashboardStaff />\r\n            </ProtectedRoute>\r\n          ),\r\n        },\r\n        {\r\n          path: \"product\",\r\n          element: (\r\n            <ProtectedRoute allowedRoles={[\"staff\", \"admin\"]}>\r\n              <Product />\r\n            </ProtectedRoute>\r\n          ),\r\n        },\r\n        {\r\n          path: \"userprofile\",\r\n          element: (\r\n            <ProtectedRoute allowedRoles={[\"staff\", \"admin\"]}>\r\n              <UserProfile />\r\n            </ProtectedRoute>\r\n          ),\r\n        },\r\n        {\r\n          path: \"order\",\r\n          element: (\r\n            <ProtectedRoute>\r\n              <OrderStock />\r\n            </ProtectedRoute>\r\n          ),\r\n        },\r\n        {\r\n          path: \"*\",\r\n          element: (\r\n            <Navigate\r\n              to={getUserRole() === \"admin\" ? \"/dashboardAdmin\" : \"/dashboard\"}\r\n              replace\r\n            />\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      element: (\r\n        <PublicRoute>\r\n          <Login />\r\n        </PublicRoute>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Create the router with future flags\r\n  const router = createBrowserRouter(routes, {\r\n    future: {\r\n      v7_startTransition: true, // Opt into React.startTransition behavior\r\n      v7_relativeSplatPath: true, // Opt into new relative route resolution for splat routes\r\n    },\r\n  });\r\n\r\n  return router;\r\n}\r\n\r\nexport default AppRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}