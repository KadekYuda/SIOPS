{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\components\\\\Page\\\\Home\\\\DashboardLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport SidebarAdmin from '../Sidebar/admin/SidebarAdmin';\nimport Sidebars from '../Sidebar/staff/Sidebars';\nimport Headers from '../Sidebar/Headers';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardLayout = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Mobile Sidebar\n  const [isDesktopSidebarOpen, setIsDesktopSidebarOpen] = useState(true); // Desktop Sidebar\n  const role = localStorage.getItem(\"role\"); // Ambil role dari localStorage\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n\n  // Toggle untuk Mobile Sidebar\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prev => !prev);\n  };\n\n  // Toggle untuk Desktop Sidebar\n  const toggleDesktopSidebar = () => {\n    setIsDesktopSidebarOpen(prev => !prev);\n  };\n\n  // Toggle untuk Dark Mode\n  const toggleDarkMode = () => {\n    setDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"flex min-h-screen\", darkMode ? \"dark bg-gray-900\" : \"bg-gray-100\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"fixed z-40 inset-y-0 left-0 bg-white dark:bg-gray-800 shadow-lg transition-transform duration-300 ease-in-out\", {\n        \"translate-x-0 w-64\": isSidebarOpen,\n        // Mobile Sidebar Open\n        \"-translate-x-full hidden lg:block\": !isSidebarOpen,\n        // Mobile Sidebar Closed\n        \"lg:translate-x-0 lg:w-64\": isDesktopSidebarOpen,\n        // Desktop Sidebar Open\n        \"lg:-translate-x-full\": !isDesktopSidebarOpen // Desktop Sidebar Closed\n      }),\n      children: /*#__PURE__*/_jsxDEV(SidebarComponent, {\n        isSidebarOpen: isSidebarOpen,\n        isDesktopSidebarOpen: isDesktopSidebarOpen,\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode && \"dark\"}`,\n      children: /*#__PURE__*/_jsxDEV(Headers, {\n        toggleDarkMode: toggleDarkMode,\n        darkMode: darkMode,\n        toggleSidebar: toggleSidebar // Mobile\n        ,\n        toggleDesktopSidebar: toggleDesktopSidebar // Desktop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"flex-1 flex flex-col transition-all duration-300 ease-in-out overflow-x-hidden p-4\", {\n        \"lg:ml-64\": isDesktopSidebarOpen,\n        // Geser konten saat Desktop Sidebar terbuka\n        \"lg:ml-0\": !isDesktopSidebarOpen // Konten normal saat Desktop Sidebar tertutup\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLayout, \"DzZzldNuas+uGETni5Wgdbr9YPY=\");\n_c = DashboardLayout;\nexport default DashboardLayout;\nvar _c;\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","useNavigate","useLocation","SidebarAdmin","Sidebars","Headers","clsx","jsxDEV","_jsxDEV","DashboardLayout","_s","darkMode","setDarkMode","isSidebarOpen","setIsSidebarOpen","isDesktopSidebarOpen","setIsDesktopSidebarOpen","role","localStorage","getItem","SidebarComponent","toggleSidebar","prev","toggleDesktopSidebar","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/components/Page/Home/DashboardLayout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport SidebarAdmin from '../Sidebar/admin/SidebarAdmin';\nimport Sidebars from '../Sidebar/staff/Sidebars';\nimport Headers from '../Sidebar/Headers';\nimport clsx from 'clsx';\n\nconst DashboardLayout = () => {\n  const [darkMode, setDarkMode] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Mobile Sidebar\n  const [isDesktopSidebarOpen, setIsDesktopSidebarOpen] = useState(true); // Desktop Sidebar\n  const role = localStorage.getItem(\"role\"); // Ambil role dari localStorage\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n\n  // Toggle untuk Mobile Sidebar\n  const toggleSidebar = () => {\n    setIsSidebarOpen((prev) => !prev);\n  };\n\n  // Toggle untuk Desktop Sidebar\n  const toggleDesktopSidebar = () => {\n    setIsDesktopSidebarOpen((prev) => !prev);\n  };\n\n  // Toggle untuk Dark Mode\n  const toggleDarkMode = () => {\n    setDarkMode((prev) => !prev);\n  };\n\n  return (\n    <div\n      className={clsx(\n        \"flex min-h-screen\",\n        darkMode ? \"dark bg-gray-900\" : \"bg-gray-100\"\n      )}\n    >\n      {/* Sidebar */}\n      <div\n        className={clsx(\n          \"fixed z-40 inset-y-0 left-0 bg-white dark:bg-gray-800 shadow-lg transition-transform duration-300 ease-in-out\",\n          {\n            \"translate-x-0 w-64\": isSidebarOpen, // Mobile Sidebar Open\n            \"-translate-x-full hidden lg:block\": !isSidebarOpen, // Mobile Sidebar Closed\n            \"lg:translate-x-0 lg:w-64\": isDesktopSidebarOpen, // Desktop Sidebar Open\n            \"lg:-translate-x-full\": !isDesktopSidebarOpen, // Desktop Sidebar Closed\n          }\n        )}\n      >\n        <SidebarComponent\n          isSidebarOpen={isSidebarOpen}\n          isDesktopSidebarOpen={isDesktopSidebarOpen}\n          darkMode={darkMode}\n          toggleDarkMode={toggleDarkMode}\n        />\n      </div>\n\n      {/* Header */}\n      <div className={`${darkMode && \"dark\"}`}>\n        <Headers\n          toggleDarkMode={toggleDarkMode}\n          darkMode={darkMode}\n          toggleSidebar={toggleSidebar} // Mobile\n          toggleDesktopSidebar={toggleDesktopSidebar} // Desktop\n        />\n        </div>\n\n        {/* Main Content Area */}\n        <div\n          className={clsx(\n            \"flex-1 flex flex-col transition-all duration-300 ease-in-out overflow-x-hidden p-4\",\n            {\n              \"lg:ml-64\": isDesktopSidebarOpen, // Geser konten saat Desktop Sidebar terbuka\n              \"lg:ml-0\": !isDesktopSidebarOpen, // Konten normal saat Desktop Sidebar tertutup\n            }\n          )}\n        >\n          <main>\n          <Outlet />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n  \n      "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}