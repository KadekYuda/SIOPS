{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\components\\\\Page\\\\Home\\\\DashboardLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport SidebarAdmin from '../Sidebar/admin/SidebarAdmin';\nimport Sidebars from '../Sidebar/staff/Sidebars';\nimport Headers from '../Sidebar/Headers';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardLayout = () => {\n  _s();\n  const [role, setRole] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDesktopSidebarOpen, setIsDesktopSidebarOpen] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login', {\n        replace: true\n      });\n      return;\n    }\n    try {\n      const userData = JSON.parse(atob(token.split('.')[1]));\n      setRole(userData.role);\n\n      // Redirect staff if trying to access admin routes\n      if (userData.role === 'staff' && (location.pathname.includes('/users') || location.pathname.includes('/add') || location.pathname.includes('/edit'))) {\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      navigate('/login', {\n        replace: true\n      });\n    }\n  }, [location.pathname, navigate]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleDesktopSidebar = () => {\n    setIsDesktopSidebarOpen(!isDesktopSidebarOpen);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"flex h-screen bg-gray-100\", {\n      \"dark\": darkMode\n    }),\n    children: [/*#__PURE__*/_jsxDEV(SidebarComponent, {\n      isSidebarOpen: isSidebarOpen,\n      isDesktopSidebarOpen: isDesktopSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(Headers, {\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode,\n        toggleSidebar: toggleSidebar,\n        toggleDesktopSidebar: toggleDesktopSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: clsx(\"p-4 transition-all duration-300 ease-in-out\", {\n          \"lg:ml-64\": isDesktopSidebarOpen,\n          \"lg:ml-0\": !isDesktopSidebarOpen\n        }),\n        children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLayout, \"KyMxBqJif8D6TDyhhbQPwYy5auE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DashboardLayout;\nexport default DashboardLayout;\nvar _c;\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","useNavigate","useLocation","SidebarAdmin","Sidebars","Headers","clsx","jsxDEV","_jsxDEV","DashboardLayout","_s","role","setRole","isSidebarOpen","setIsSidebarOpen","isDesktopSidebarOpen","setIsDesktopSidebarOpen","darkMode","setDarkMode","navigate","location","token","localStorage","getItem","replace","userData","JSON","parse","atob","split","pathname","includes","error","console","toggleSidebar","toggleDesktopSidebar","toggleDarkMode","SidebarComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/components/Page/Home/DashboardLayout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport SidebarAdmin from '../Sidebar/admin/SidebarAdmin';\nimport Sidebars from '../Sidebar/staff/Sidebars';\nimport Headers from '../Sidebar/Headers';\nimport clsx from 'clsx';\n\nconst DashboardLayout = () => {\n  const [role, setRole] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDesktopSidebarOpen, setIsDesktopSidebarOpen] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login', { replace: true });\n      return;\n    }\n\n    try {\n      const userData = JSON.parse(atob(token.split('.')[1]));\n      setRole(userData.role);\n\n      // Redirect staff if trying to access admin routes\n      if (userData.role === 'staff' && (\n        location.pathname.includes('/users') ||\n        location.pathname.includes('/add') ||\n        location.pathname.includes('/edit')\n      )) {\n        navigate('/dashboard', { replace: true });\n      }\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      navigate('/login', { replace: true });\n    }\n  }, [location.pathname, navigate]);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const toggleDesktopSidebar = () => {\n    setIsDesktopSidebarOpen(!isDesktopSidebarOpen);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n\n  return (\n    <div className={clsx(\"flex h-screen bg-gray-100\", { \"dark\": darkMode })}>\n      <SidebarComponent\n        isSidebarOpen={isSidebarOpen}\n        isDesktopSidebarOpen={isDesktopSidebarOpen}\n      />\n\n      <div className=\"flex-1\">\n        <Headers\n          darkMode={darkMode}\n          toggleDarkMode={toggleDarkMode}\n          toggleSidebar={toggleSidebar}\n          toggleDesktopSidebar={toggleDesktopSidebar}\n        />\n\n        <main className={clsx(\n          \"p-4 transition-all duration-300 ease-in-out\",\n          {\n            \"lg:ml-64\": isDesktopSidebarOpen,\n            \"lg:ml-0\": !isDesktopSidebarOpen\n          }\n        )}>\n          <Outlet />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}