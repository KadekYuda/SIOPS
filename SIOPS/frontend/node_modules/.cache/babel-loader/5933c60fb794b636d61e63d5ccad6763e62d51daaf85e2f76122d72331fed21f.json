{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\components\\\\Page\\\\Home\\\\DashboardLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Outlet } from \"react-router-dom\";\nimport SidebarAdmin from \"../Sidebar/admin/SidebarAdmin\";\nimport Sidebars from \"../Sidebar/staff/Sidebars\";\nimport Headers from \"../Sidebar/Headers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardLayout = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [firstMenuActive, setFirstMenuActive] = useState(false);\n  const [secondMenuActive, setSecondMenuActive] = useState(false);\n  const role = localStorage.getItem(\"role\");\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prev => !prev);\n    setFirstMenuActive(!firstMenuActive);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"fixed z-40 inset-y-0 left-0 bg-white dark:bg-gray-800 shadow-lg transition-transform duration-300 ease-in-out\", isSidebarOpen ? \"translate-x-0 w-64\" : \"-translate-x-full\", \"lg:translate-x-0 lg:w-64\", !isSidebarOpen && \"hidden lg:w-0\"),\n      children: /*#__PURE__*/_jsxDEV(SidebarComponent, {\n        isSidebarOpen: isSidebarOpen,\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode && \"dark\"}`,\n      children: /*#__PURE__*/_jsxDEV(Headers, {\n        toggleDarkMode: toggleDarkMode,\n        darkMode: darkMode,\n        toggleSidebar: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"flex-1 flex flex-col transition-all duration-300 ease-in-out overflow-x-hidden\", isSidebarOpen ? \"lg:ml-64\" : \"lg:ml-0\"),\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 p-4\",\n        children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLayout, \"XM1cegh79Ck5MBNLUJESrzq/tKA=\");\n_c = DashboardLayout;\nexport default DashboardLayout;\nvar _c;\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"names":["React","useState","clsx","Outlet","SidebarAdmin","Sidebars","Headers","jsxDEV","_jsxDEV","DashboardLayout","_s","darkMode","setDarkMode","isSidebarOpen","setIsSidebarOpen","firstMenuActive","setFirstMenuActive","secondMenuActive","setSecondMenuActive","role","localStorage","getItem","SidebarComponent","toggleSidebar","prev","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/components/Page/Home/DashboardLayout.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SidebarAdmin from \"../Sidebar/admin/SidebarAdmin\";\r\nimport Sidebars from \"../Sidebar/staff/Sidebars\";\r\nimport Headers from \"../Sidebar/Headers\";\r\n\r\nconst DashboardLayout = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [firstMenuActive, setFirstMenuActive] = useState(false);\r\n  const [secondMenuActive, setSecondMenuActive] = useState(false);\r\n  const role = localStorage.getItem(\"role\");\r\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen((prev) => !prev);\r\n    setFirstMenuActive(!firstMenuActive);\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-100\">\r\n      <div\r\n        className={clsx(\r\n          \"fixed z-40 inset-y-0 left-0 bg-white dark:bg-gray-800 shadow-lg transition-transform duration-300 ease-in-out\",\r\n          isSidebarOpen ? \"translate-x-0 w-64\" : \"-translate-x-full\",\r\n          \"lg:translate-x-0 lg:w-64\",\r\n          !isSidebarOpen && \"hidden lg:w-0\"\r\n        )}\r\n      >\r\n        <SidebarComponent\r\n          isSidebarOpen={isSidebarOpen}\r\n          darkMode={darkMode}\r\n          toggleDarkMode={toggleDarkMode}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${darkMode && \"dark\"}`}>\r\n        <Headers\r\n          toggleDarkMode={toggleDarkMode}\r\n          darkMode={darkMode}\r\n          toggleSidebar={toggleSidebar}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className={clsx(\r\n          \"flex-1 flex flex-col transition-all duration-300 ease-in-out overflow-x-hidden\",\r\n          isSidebarOpen ? \"lg:ml-64\" : \"lg:ml-0\"\r\n        )}\r\n      >\r\n        <main className=\"flex-1 p-4\">\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}