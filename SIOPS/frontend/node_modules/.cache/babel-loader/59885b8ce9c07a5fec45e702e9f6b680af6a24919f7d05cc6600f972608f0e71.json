{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\components\\\\Page\\\\Home\\\\DashboardLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport SidebarAdmin from \"../Sidebar/admin/SidebarAdmin\";\nimport Sidebars from \"../Sidebar/staff/Sidebars\";\nimport Headers from \"../Sidebar/Headers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardLayout = ({\n  toggleDarkMode,\n  darkMode\n}) => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const role = localStorage.getItem(\"role\");\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden lg:flex\",\n      children: /*#__PURE__*/_jsxDEV(SidebarComponent, {\n        isSidebarOpen: true // Always open in desktop mode\n        ,\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed z-50 inset-y-0 left-0 w-64 transform bg-white shadow-lg ${isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"} transition-transform duration-300 ease-in-out lg:hidden`,\n      children: /*#__PURE__*/_jsxDEV(SidebarComponent, {\n        isSidebarOpen: isSidebarOpen // Open/Close in mobile mode\n        ,\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:hidden\",\n        children: /*#__PURE__*/_jsxDEV(Headers, {\n          toggleDarkMode: toggleDarkMode,\n          darkMode: darkMode,\n          toggleSidebar: toggleSidebar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 p-4 lg:ml-64\",\n        children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLayout, \"7pDpjxpt81vLgIcSls7O8aGkvA4=\");\n_c = DashboardLayout;\nexport default DashboardLayout;\nvar _c;\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"names":["React","useState","Outlet","SidebarAdmin","Sidebars","Headers","jsxDEV","_jsxDEV","DashboardLayout","toggleDarkMode","darkMode","_s","isSidebarOpen","setIsSidebarOpen","role","localStorage","getItem","SidebarComponent","toggleSidebar","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/components/Page/Home/DashboardLayout.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SidebarAdmin from \"../Sidebar/admin/SidebarAdmin\";\r\nimport Sidebars from \"../Sidebar/staff/Sidebars\";\r\nimport Headers from \"../Sidebar/Headers\";\r\n\r\nconst DashboardLayout = ({ toggleDarkMode, darkMode }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const role = localStorage.getItem(\"role\");\r\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\r\n\r\n  // Toggle sidebar visibility\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      {/* Desktop Sidebar */}\r\n      <div className=\"hidden lg:flex\">\r\n        <SidebarComponent\r\n          isSidebarOpen={true} // Always open in desktop mode\r\n          darkMode={darkMode}\r\n          toggleDarkMode={toggleDarkMode}\r\n        />\r\n      </div>\r\n\r\n      {/* Mobile Sidebar */}\r\n      <div\r\n        className={`fixed z-50 inset-y-0 left-0 w-64 transform bg-white shadow-lg ${\r\n          isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"\r\n        } transition-transform duration-300 ease-in-out lg:hidden`}\r\n      >\r\n        <SidebarComponent\r\n          isSidebarOpen={isSidebarOpen} // Open/Close in mobile mode\r\n          darkMode={darkMode}\r\n          toggleDarkMode={toggleDarkMode}\r\n        />\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n        {/* Mobile Header */}\r\n        <div className=\"lg:hidden\">\r\n          <Headers\r\n            toggleDarkMode={toggleDarkMode}\r\n            darkMode={darkMode}\r\n            toggleSidebar={toggleSidebar}\r\n          />\r\n        </div>\r\n\r\n        {/* Main content area */}\r\n        <main className=\"flex-1 p-4 lg:ml-64\">\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,eAAe,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMa,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMC,gBAAgB,GAAGH,IAAI,KAAK,OAAO,GAAGX,YAAY,GAAGC,QAAQ;;EAEnE;EACA,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1BL,gBAAgB,CAAEM,IAAI,IAAK,CAACA,IAAI,CAAC;EACnC,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAG5Cd,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7Bd,OAAA,CAACU,gBAAgB;QACfL,aAAa,EAAE,IAAK,CAAC;QAAA;QACrBF,QAAQ,EAAEA,QAAS;QACnBD,cAAc,EAAEA;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlB,OAAA;MACEa,SAAS,EAAE,iEACTR,aAAa,GAAG,eAAe,GAAG,mBAAmB,0DACI;MAAAS,QAAA,eAE3Dd,OAAA,CAACU,gBAAgB;QACfL,aAAa,EAAEA,aAAc,CAAC;QAAA;QAC9BF,QAAQ,EAAEA,QAAS;QACnBD,cAAc,EAAEA;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlB,OAAA;MAAKa,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAEnCd,OAAA;QAAKa,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBd,OAAA,CAACF,OAAO;UACNI,cAAc,EAAEA,cAAe;UAC/BC,QAAQ,EAAEA,QAAS;UACnBQ,aAAa,EAAEA;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNlB,OAAA;QAAMa,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eACnCd,OAAA,CAACL,MAAM;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CArDIH,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AAuDrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}