{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\components\\\\auth\\\\AuthLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthLayout = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsAuthenticated(false);\n        navigate('/login', {\n          replace: true\n        });\n        return;\n      }\n      try {\n        // Check token expiration\n        const userData = JSON.parse(atob(token.split('.')[1]));\n        const currentTime = Math.floor(Date.now() / 1000);\n        if (userData.exp < currentTime) {\n          setIsAuthenticated(false);\n          localStorage.removeItem('token');\n          navigate('/login', {\n            replace: true\n          });\n          return;\n        }\n\n        // Verify with backend\n        const response = await axios.get('http://localhost:5000/verify-token', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.valid) {\n          setIsAuthenticated(true);\n          // Redirect based on role\n          if (location.pathname === '/') {\n            navigate(userData.role === 'admin' ? '/dashboardAdmin' : '/dashboard', {\n              replace: true\n            });\n          }\n        } else {\n          setIsAuthenticated(false);\n          localStorage.removeItem('token');\n          navigate('/login', {\n            replace: true\n          });\n        }\n      } catch (error) {\n        console.error('Auth verification failed:', error);\n        setIsAuthenticated(false);\n        localStorage.removeItem('token');\n        navigate('/login', {\n          replace: true\n        });\n      }\n    };\n    verifyAuth();\n\n    // Handle navigation events\n    const handleNavigation = () => {\n      verifyAuth();\n    };\n    window.addEventListener('popstate', handleNavigation);\n    return () => {\n      window.removeEventListener('popstate', handleNavigation);\n    };\n  }, [navigate, location.pathname]);\n\n  // Show loading state while checking authentication\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(AuthLayout, \"WqD1+TXWiEoQGK2tzCOrRMHAcV8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AuthLayout;\nexport default AuthLayout;\nvar _c;\n$RefreshReg$(_c, \"AuthLayout\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","AuthLayout","children","_s","isAuthenticated","setIsAuthenticated","location","navigate","verifyAuth","token","localStorage","getItem","replace","userData","JSON","parse","atob","split","currentTime","Math","floor","Date","now","exp","removeItem","response","get","headers","Authorization","data","valid","pathname","role","error","console","handleNavigation","window","addEventListener","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/components/auth/AuthLayout.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AuthLayout = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const verifyAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setIsAuthenticated(false);\n        navigate('/login', { replace: true });\n        return;\n      }\n\n      try {\n        // Check token expiration\n        const userData = JSON.parse(atob(token.split('.')[1]));\n        const currentTime = Math.floor(Date.now() / 1000);\n        \n        if (userData.exp < currentTime) {\n          setIsAuthenticated(false);\n          localStorage.removeItem('token');\n          navigate('/login', { replace: true });\n          return;\n        }\n\n        // Verify with backend\n        const response = await axios.get('http://localhost:5000/verify-token', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        \n        if (response.data.valid) {\n          setIsAuthenticated(true);\n          // Redirect based on role\n          if (location.pathname === '/') {\n            navigate(userData.role === 'admin' ? '/dashboardAdmin' : '/dashboard', { replace: true });\n          }\n        } else {\n          setIsAuthenticated(false);\n          localStorage.removeItem('token');\n          navigate('/login', { replace: true });\n        }\n      } catch (error) {\n        console.error('Auth verification failed:', error);\n        setIsAuthenticated(false);\n        localStorage.removeItem('token');\n        navigate('/login', { replace: true });\n      }\n    };\n\n    verifyAuth();\n\n    // Handle navigation events\n    const handleNavigation = () => {\n      verifyAuth();\n    };\n\n    window.addEventListener('popstate', handleNavigation);\n    return () => {\n      window.removeEventListener('popstate', handleNavigation);\n    };\n  }, [navigate, location.pathname]);\n\n  // Show loading state while checking authentication\n  if (isAuthenticated === null) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-lg\">Loading...</div>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default AuthLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}