{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sistem Ta1\\\\SIOPS\\\\frontend\\\\src\\\\components\\\\Page\\\\Home\\\\DashboardLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport SidebarAdmin from '../Sidebar/admin/SidebarAdmin';\nimport Sidebars from '../Sidebar/staff/Sidebars';\nimport Headers from '../Sidebar/Headers';\nimport clsx from 'clsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardLayout = () => {\n  _s();\n  const [role, setRole] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDesktopSidebarOpen, setIsDesktopSidebarOpen] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login', {\n        replace: true\n      });\n      return;\n    }\n    try {\n      const userData = JSON.parse(atob(token.split('.')[1]));\n      setRole(userData.role);\n\n      // Redirect staff if trying to access admin routes\n      if (userData.role === 'staff' && (location.pathname.includes('/users') || location.pathname.includes('/add') || location.pathname.includes('/edit'))) {\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      navigate('/login', {\n        replace: true\n      });\n    }\n  }, [location.pathname, navigate]);\n\n  // Handle mobile sidebar toggle\n  const toggleMobileSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n    // Close desktop sidebar when opening mobile sidebar\n    if (!isSidebarOpen && window.innerWidth < 768) {\n      setIsDesktopSidebarOpen(false);\n    }\n  };\n\n  // Handle desktop sidebar toggle\n  const toggleDesktopSidebar = () => {\n    setIsDesktopSidebarOpen(!isDesktopSidebarOpen);\n    // Close mobile sidebar when toggling desktop sidebar\n    setIsSidebarOpen(false);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Close mobile sidebar on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768) {\n        setIsSidebarOpen(false);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(\"flex h-screen bg-gray-100\", {\n      \"dark\": darkMode\n    }),\n    children: [isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-900 bg-opacity-50 z-30 md:hidden\",\n      onClick: toggleMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarComponent, {\n      isSidebarOpen: isSidebarOpen,\n      isDesktopSidebarOpen: isDesktopSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(\"flex-1 flex flex-col transition-all duration-300 ease-in-out\", {\n        \"md:ml-64\": isDesktopSidebarOpen,\n        \"ml-0\": !isDesktopSidebarOpen\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Headers, {\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode,\n        toggleSidebar: toggleMobileSidebar,\n        toggleDesktopSidebar: toggleDesktopSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"p-4 mt-16\",\n        children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardLayout, \"JYvWmk/iKP9dzrUJb+pZlnIoRYs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DashboardLayout;\nexport default DashboardLayout;\nvar _c;\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","useNavigate","useLocation","SidebarAdmin","Sidebars","Headers","clsx","jsxDEV","_jsxDEV","DashboardLayout","_s","role","setRole","isSidebarOpen","setIsSidebarOpen","isDesktopSidebarOpen","setIsDesktopSidebarOpen","darkMode","setDarkMode","navigate","location","token","localStorage","getItem","replace","userData","JSON","parse","atob","split","pathname","includes","error","console","toggleMobileSidebar","window","innerWidth","toggleDesktopSidebar","toggleDarkMode","handleResize","addEventListener","removeEventListener","SidebarComponent","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toggleSidebar","_c","$RefreshReg$"],"sources":["D:/Sistem Ta1/SIOPS/frontend/src/components/Page/Home/DashboardLayout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport SidebarAdmin from '../Sidebar/admin/SidebarAdmin';\nimport Sidebars from '../Sidebar/staff/Sidebars';\nimport Headers from '../Sidebar/Headers';\nimport clsx from 'clsx';\n\nconst DashboardLayout = () => {\n  const [role, setRole] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDesktopSidebarOpen, setIsDesktopSidebarOpen] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login', { replace: true });\n      return;\n    }\n\n    try {\n      const userData = JSON.parse(atob(token.split('.')[1]));\n      setRole(userData.role);\n\n      // Redirect staff if trying to access admin routes\n      if (userData.role === 'staff' && (\n        location.pathname.includes('/users') ||\n        location.pathname.includes('/add') ||\n        location.pathname.includes('/edit')\n      )) {\n        navigate('/dashboard', { replace: true });\n      }\n    } catch (error) {\n      console.error('Error parsing token:', error);\n      navigate('/login', { replace: true });\n    }\n  }, [location.pathname, navigate]);\n\n  // Handle mobile sidebar toggle\n  const toggleMobileSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n    // Close desktop sidebar when opening mobile sidebar\n    if (!isSidebarOpen && window.innerWidth < 768) {\n      setIsDesktopSidebarOpen(false);\n    }\n  };\n\n  // Handle desktop sidebar toggle\n  const toggleDesktopSidebar = () => {\n    setIsDesktopSidebarOpen(!isDesktopSidebarOpen);\n    // Close mobile sidebar when toggling desktop sidebar\n    setIsSidebarOpen(false);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Close mobile sidebar on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768) {\n        setIsSidebarOpen(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const SidebarComponent = role === \"admin\" ? SidebarAdmin : Sidebars;\n\n  return (\n    <div className={clsx(\"flex h-screen bg-gray-100\", { \"dark\": darkMode })}>\n      {/* Overlay for mobile sidebar */}\n      {isSidebarOpen && (\n        <div\n          className=\"fixed inset-0 bg-gray-900 bg-opacity-50 z-30 md:hidden\"\n          onClick={toggleMobileSidebar}\n        />\n      )}\n\n      <SidebarComponent\n        isSidebarOpen={isSidebarOpen}\n        isDesktopSidebarOpen={isDesktopSidebarOpen}\n      />\n\n      <div className={clsx(\n        \"flex-1 flex flex-col transition-all duration-300 ease-in-out\",\n        {\n          \"md:ml-64\": isDesktopSidebarOpen,\n          \"ml-0\": !isDesktopSidebarOpen\n        }\n      )}>\n        <Headers\n          darkMode={darkMode}\n          toggleDarkMode={toggleDarkMode}\n          toggleSidebar={toggleMobileSidebar}\n          toggleDesktopSidebar={toggleDesktopSidebar}\n        />\n\n        <main className=\"p-4 mt-16\">\n          <Outlet />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}