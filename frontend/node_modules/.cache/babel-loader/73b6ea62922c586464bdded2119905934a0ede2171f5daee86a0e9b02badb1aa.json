{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayamk\\\\Desktop\\\\Html\\\\fullstack\\\\frontend\\\\src\\\\components\\\\Page\\\\Sidebar\\\\staff\\\\OrderChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, LineController } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, LineController // Daftarkan LineController untuk chart jenis \"line\"\n);\nconst OrderChart = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    fetchOrderData();\n    return () => {\n      // Pastikan chart dihancurkan saat komponen di-unmount\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, []);\n  const fetchOrderData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/orders');\n      const orders = response.data;\n      setOrders(orders);\n\n      // Group orders by date\n      const groupedOrders = orders.reduce((acc, order) => {\n        const date = new Date(order.date).toLocaleDateString();\n        if (!acc[date]) {\n          acc[date] = [];\n        }\n        acc[date].push(order);\n        return acc;\n      }, {});\n      const dates = Object.keys(groupedOrders);\n      const orderCounts = dates.map(date => groupedOrders[date].length);\n\n      // Destroy previous chart instance to avoid duplication\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n\n      // Create the chart\n      chartInstance.current = new ChartJS(chartRef.current, {\n        type: 'line',\n        data: {\n          labels: dates,\n          datasets: [{\n            label: 'Jumlah Order per Tanggal',\n            data: orderCounts,\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            fill: true\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              display: true\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching order data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-5 mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Order Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderChart, \"509R2WdWH2I8rYgK1QlqZGJblrA=\");\n_c = OrderChart;\nexport default OrderChart;\nvar _c;\n$RefreshReg$(_c, \"OrderChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","LineController","jsxDEV","_jsxDEV","register","OrderChart","_s","orders","setOrders","chartRef","chartInstance","fetchOrderData","current","destroy","response","get","data","groupedOrders","reduce","acc","order","date","Date","toLocaleDateString","push","dates","Object","keys","orderCounts","map","length","type","labels","datasets","label","borderColor","backgroundColor","fill","options","responsive","plugins","legend","display","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/ayamk/Desktop/Html/fullstack/frontend/src/components/Page/Sidebar/staff/OrderChart.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineController,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineController // Daftarkan LineController untuk chart jenis \"line\"\r\n);\r\n\r\nconst OrderChart = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchOrderData();\r\n    return () => {\r\n      // Pastikan chart dihancurkan saat komponen di-unmount\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const fetchOrderData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/orders');\r\n      const orders = response.data;\r\n      setOrders(orders);\r\n\r\n      // Group orders by date\r\n      const groupedOrders = orders.reduce((acc, order) => {\r\n        const date = new Date(order.date).toLocaleDateString();\r\n        if (!acc[date]) {\r\n          acc[date] = [];\r\n        }\r\n        acc[date].push(order);\r\n        return acc;\r\n      }, {});\r\n\r\n      const dates = Object.keys(groupedOrders);\r\n      const orderCounts = dates.map(date => groupedOrders[date].length);\r\n\r\n      // Destroy previous chart instance to avoid duplication\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n\r\n      // Create the chart\r\n      chartInstance.current = new ChartJS(chartRef.current, {\r\n        type: 'line',\r\n        data: {\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: 'Jumlah Order per Tanggal',\r\n              data: orderCounts,\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              fill: true,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching order data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-5 mt-5\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Order Chart</h2>\r\n      <div>\r\n        <canvas ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}